name: 🔨 Scoop Archive Update
on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: windows-latest 
    environment: dev
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 'Set up Scoop'
      shell: pwsh
      run: |
        mkdir "D:\00PackageManager\"
        $env:SCOOP='D:\00PackageManager\Scoop'
        [Environment]::SetEnvironmentVariable('SCOOP', $env:SCOOP, 'User')
        Set-ExecutionPolicy RemoteSigned -scope CurrentUser 
        iwr -useb get.scoop.sh | iex
        scoop bucket add extras
        scoop bucket add versions
        scoop bucket add nirsoft
        scoop bucket add java
        scoop bucket add nonportable
        scoop bucket add ktools https://github.com/kenyon-wong/ktools
        
        echo "$env:SCOOP\shims" >> $env:GITHUB_PATH

    - name: 'Setup Scoop aria2'
      shell: pwsh 
      run: |
        scoop install aria2 sudo git 7zip
        scoop config aria2-warning-enabled false
        scoop config aria2-enabled true
        scoop config aria2-retry-wait 4
        scoop config aria2-split 16
        scoop config aria2-max-connection-per-server 16
        scoop config aria2-min-split-size 4M
 
    - name: 'Install Required Tools'
      shell: pwsh 
      run: |
        scoop install innounp dark
        scoop install biome jq yq vim curl wget base64 gawk grep sed less touch which cwrsync cacert openssl-lts-light autocorrect fd sourcegit
        scoop install burp-suite-pro-np

    - name: '📦 Pre-download Scoop Apps (from scoopfile.json)'
      shell: pwsh
      run: |
        # 1️⃣ 确认 scoopfile.json 存在
        if (-Not (Test-Path ".\scoopfile.json")) {
          Write-Host "❌ scoopfile.json 未找到，跳过下载步骤。"
          exit 0
        }

        # 2️⃣ 提取应用列表
        jq '.apps[].Name' -r .\scoopfile.json | Out-File -Encoding utf8 .\list.txt
        Write-Host "✅ 已生成 list.txt ："
        Get-Content .\list.txt

        # 3️⃣ 循环下载 scoop 包（提前缓存）
        $apps = Get-Content .\list.txt | Where-Object { $_ -ne "" }
        foreach ($app in $apps) {
          Write-Host "⬇️ 正在下载 Scoop 包: $app"
          scoop download $app -k
        }

    - name: 'Show scoop config'
      shell: pwsh
      run: |
        scoop list
        scoop bucket list
        scoop config

    - name: 'Compress Scoop Directory'
      shell: pwsh
      run: |
        $env:SCOOP7z='D:\00PackageManager\Scoop\apps\7zip\current\7z.exe'
        & $env:SCOOP7z a -mx9 -t7z -snh -snl 'D:\00PackageManager.7z' 'D:\00PackageManager\*'
        & $env:SCOOP7z l 'D:\00PackageManager.7z'

    - name: 'Upload Compressed Scoop Directory'
      uses: actions/upload-artifact@v4
      with:
        name: Scoop-00PackageManager-Base
        path: D:\00PackageManager.7z
        retention-days: 3
        compression-level: 0
